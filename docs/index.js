const textarea=document.getElementById("textarea");if(navigator.userAgent.toLowerCase().indexOf("mac os")!==-1){const e=document.getElementById("undoKey");e.textContent="[command]+[z]";const t=document.getElementById("redoKey");t.textContent="[command]+[shift]+[z]",document.body.addEventListener("keydown",n=>{if(n.metaKey)switch(n.key){case"z":n.preventDefault();return}}),textarea.addEventListener("keydown",n=>{if(!!n.metaKey)switch(n.key){case"z":if(n.shiftKey){redoAction();return}else{undoAction();return}}})}else document.body.addEventListener("keydown",e=>{if(e.ctrlKey)switch(e.key){case"z":case"y":e.preventDefault();return}}),textarea.addEventListener("keydown",e=>{if(!!e.ctrlKey)switch(e.key){case"z":if(e.shiftKey){redoAction();return}else{undoAction();return}case"y":redoAction();return}});let lastValue="";textarea.addEventListener("input",e=>{switch(e.inputType){case"historyUndo":case"historyRedo":textarea.value=lastValue;return;default:lastValue=textarea.value;return}});class InputData{constructor(t,n,o,s,r,a,d){this.value=t;this.start=n;this.end=o;this.before=s;this.fromSelection=r;this.doMore=a;this.undo=d}}const undoStack=[],redoStack=[],undoAction=(e=!1)=>{if(undoStack.length===0)return;const t=undoStack.pop();textarea.setRangeText(t.before,t.start,t.end,t.fromSelection),redoStack.push(new InputData(t.before,t.start,t.start+t.before.length,t.value,t.fromSelection,e,t)),updateLog(),t.doMore&&undoAction(!0)},redoAction=()=>{if(redoStack.length===0)return;const e=redoStack.pop();textarea.setRangeText(e.before,e.start,e.end,e.fromSelection),undoStack.push(e.undo),updateLog(),e.doMore&&redoAction()};let selectionText;document.addEventListener("selectionchange",()=>{selectionText=textarea.value.slice(textarea.selectionStart,textarea.selectionEnd)});let imeBefore,imeTextStart,imeTextEnd;textarea.addEventListener("compositionstart",()=>{imeBefore=selectionText}),textarea.addEventListener("compositionupdate",()=>{imeTextStart=textarea.selectionStart,imeTextEnd=textarea.selectionEnd}),textarea.addEventListener("compositionend",()=>{imeTextStart!==textarea.selectionEnd&&(undoStack.push(new InputData(textarea.value.slice(imeTextStart,imeTextEnd),imeTextStart,imeTextEnd,imeBefore,"end",!1)),redoStack.length=0,updateLog())}),textarea.addEventListener("input",e=>{switch(e.inputType){case"insertCompositionText":return;case"insertLineBreak":undoStack.push(new InputData(`
`,textarea.selectionEnd-1,textarea.selectionEnd,selectionText,"end",!1)),redoStack.length=0,updateLog();return}if(e.inputType==="insertFromDrop"){undoStack.push(new InputData(textarea.value.slice(textarea.selectionStart,textarea.selectionEnd),textarea.selectionStart,textarea.selectionEnd,"","select",!0)),redoStack.length=0,updateLog();return}if(e.data!==null){undoStack.push(new InputData(e.data,textarea.selectionEnd-e.data.length,textarea.selectionEnd,selectionText,"end",!1)),redoStack.length=0,updateLog();return}}),textarea.addEventListener("paste",e=>{const t=e.clipboardData.getData("text");undoStack.push(new InputData(t,textarea.selectionEnd,textarea.selectionEnd+t.length,selectionText,"end",!1)),redoStack.length=0,updateLog()}),textarea.addEventListener("beforeinput",e=>{if(textarea.selectionStart===textarea.selectionEnd)switch(e.inputType){case"deleteContentBackward":selectionText=textarea.value.slice(textarea.selectionStart-1,textarea.selectionEnd);return;case"deleteContentForward":selectionText=textarea.value.slice(textarea.selectionStart,textarea.selectionEnd+1);return}}),textarea.addEventListener("input",e=>{switch(e.inputType){case"deleteContentBackward":undoStack.push(new InputData("",textarea.selectionEnd,textarea.selectionEnd,selectionText,"end",!1)),redoStack.length=0,updateLog();return;case"deleteContentForward":undoStack.push(new InputData("",textarea.selectionEnd,textarea.selectionEnd,selectionText,"start",!1)),redoStack.length=0,updateLog();return;case"deleteByDrag":undoStack.push(new InputData("",textarea.selectionEnd,textarea.selectionEnd,selectionText,"select",!1)),redoStack.length=0,updateLog();return}}),textarea.addEventListener("cut",()=>{undoStack.push(new InputData("",textarea.selectionStart,textarea.selectionStart,selectionText,"select",!1)),redoStack.length=0,updateLog()});const undoLog=document.getElementById("undo"),redoLog=document.getElementById("redo"),updateLog=()=>{undoLog.textContent="",redoLog.textContent="";const e=document.createDocumentFragment();for(const n of undoStack){const o=document.createElement("div");o.style.borderBottom="1px solid #000",o.textContent=`(${n.start}-${n.end}) value: ${n.value}, before: ${n.before}`,e.appendChild(o)}const t=document.createDocumentFragment();for(const n of redoStack){const o=document.createElement("div");o.style.borderBottom="1px solid #000",o.textContent=`(${n.start}-${n.end}) value: ${n.value}, before: ${n.before}`,t.appendChild(o)}undoLog.appendChild(e),redoLog.appendChild(t)};
//# sourceMappingURL=index.js.map
